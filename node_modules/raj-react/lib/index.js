'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = require('raj'),
    runtime = _require.runtime;

exports.program = function reactProgram(Component, createApp) {
  return function (_Component) {
    _inherits(RajProgram, _Component);

    function RajProgram() {
      _classCallCheck(this, RajProgram);

      return _possibleConstructorReturn(this, (RajProgram.__proto__ || Object.getPrototypeOf(RajProgram)).apply(this, arguments));
    }

    _createClass(RajProgram, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        var _this2 = this;

        var app = createApp(this.props);
        this._view = app.view;
        this._killProgram = runtime(_extends({}, app, {
          view: function view(state, dispatch) {
            _this2._dispatch = dispatch;
            _this2.setState(function () {
              return { state: state };
            });
          }
        }));
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (this._killProgram) {
          this._killProgram();
          this._killProgram = undefined;
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return this._view ? this._view(this.state.state, this._dispatch) : null;
      }
    }]);

    return RajProgram;
  }(Component);
};